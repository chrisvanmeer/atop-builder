name: üì¶ Build Atop Linux Packages (.deb & .rpm)

on:
  workflow_dispatch:
    inputs:
      atop_version:
        description: "Version of atop to build"
        required: true
        default: "2.12.0"

env:
  ATOP_VERSION: ${{ github.event.inputs.atop_version }}

jobs:
  build-deb-amd64:
    name: üèóÔ∏è Build .deb packages (amd64)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU for cross-compilation
        uses: docker/setup-qemu-action@v3

      - name: Build .deb for atop ${{ env.ATOP_VERSION }} (amd64)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg ATOP_VERSION=${{ env.ATOP_VERSION }} \
            --output type=local,dest=build-deb/amd64 \
            -f Dockerfile.deb .

      - name: Toon alle bestanden in build-deb/amd64
        run: find build-deb/amd64 -type f -o -type d

      - name: Upload .deb artifact (amd64)
        uses: actions/upload-artifact@v4
        with:
          name: atop-deb-amd64-${{ env.ATOP_VERSION }}
          path: build-deb/amd64/*.deb

  # build-deb-arm64:
  #   name: üèóÔ∏è Build .deb packages (arm64)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Set up QEMU for cross-compilation
  #       uses: docker/setup-qemu-action@v3

  #     - name: Build .deb for atop ${{ env.ATOP_VERSION }} (arm64)
  #       run: |
  #         docker buildx build \
  #           --platform linux/arm64 \
  #           --build-arg ATOP_VERSION=${{ env.ATOP_VERSION }} \
  #           --output type=local,dest=build-deb/arm64 \
  #           -f Dockerfile.deb .

  #     - name: Fix permissions (arm64)
  #       run: sudo chmod -R a+rX build-deb/arm64

  #     - name: Upload .deb artifact (arm64)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: atop-deb-arm64-${{ env.ATOP_VERSION }}
  #         path: build-deb/arm64/

  # build-rpm8:
  #   name: üèóÔ∏è Building .rpm package for EL8
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Build .rpm file for atop ${{ env.ATOP_VERSION }}
  #       run: |
  #         docker build --build-arg ATOP_VERSION=$ATOP_VERSION -f Dockerfile8.rpm -t atop-rpm8-builder .
  #         container_id=$(docker create atop-rpm8-builder)
  #         mkdir -p build-rpm
  #         docker cp "$container_id":/build/. ./build-rpm
  #         docker rm "$container_id"

  #     - name: Upload .rpm artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: atop-rpm8-${{ env.ATOP_VERSION }}
  #         path: build-rpm/

  # build-rpm9:
  #   name: üèóÔ∏è Building .rpm package for EL9
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Build .rpm file for atop ${{ env.ATOP_VERSION }}
  #       run: |
  #         docker build --build-arg ATOP_VERSION=$ATOP_VERSION -f Dockerfile9.rpm -t atop-rpm9-builder .
  #         container_id=$(docker create atop-rpm9-builder)
  #         mkdir -p build-rpm
  #         docker cp "$container_id":/build/. ./build-rpm
  #         docker rm "$container_id"

  #     - name: Upload .rpm artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: atop-rpm9-${{ env.ATOP_VERSION }}
  #         path: build-rpm/
